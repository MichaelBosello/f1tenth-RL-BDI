/*
   Project <PROJECT_NAME>

   Gradle build file for JaCaMo Applications
   <DATE>
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven { url "http://jacamo.sourceforge.net/maven2" }
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://jade.tilab.com/maven/" }

    flatDir {
       dirs 'lib'
    }
}

dependencies {
    compile group: 'org.jacamo', name: 'jacamo', version: '0.7'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.23.2'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.23.2'
    
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'jacamoRL.jcm'
    classpath sourceSets.main.runtimeClasspath
}

task runPythonAgent(type:Exec) {
   workingDir 'src/python/agt'
   commandLine 'python3', 'tf_agent_rest.py'
} 

task runPythonEnv(type:Exec) {
   workingDir 'src/python/env'
   commandLine 'python3', 'tf_env_rest.py'
} 

task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamoRL' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from 'jacamoRL.jcm'
            rename 'jacamoRL.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
